package graphql

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.75

import (
	"context"

	"github.com/google/uuid"

	graphqlgen "gobase/graphql/generated"
	productdto "gobase/internal/domain/product/dto"
	"gobase/internal/pkg/service/crud"
)

// Product is the resolver for the product field.
func (r *queryResolver) Product(ctx context.Context, id uuid.UUID) (*productdto.Product, error) {
	return r.GraphQLResolver.Product.FindById(ctx, id)
}

// Products is the resolver for the products field.
func (r *queryResolver) Products(ctx context.Context, qop *productdto.ProductQop) (*crud.PageResult[*productdto.Product], error) {
	return r.GraphQLResolver.Product.FindAll(ctx, qop)
}

// Query returns graphqlgen.QueryResolver implementation.
func (r *Resolver) Query() graphqlgen.QueryResolver { return &queryResolver{r} }

type queryResolver struct{ *Resolver }
